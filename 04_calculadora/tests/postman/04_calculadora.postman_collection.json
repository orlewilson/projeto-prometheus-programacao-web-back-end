{
	"info": {
		"_postman_id": "eb08fd05-6edd-4abf-8c1f-dca568afe196",
		"name": "04_calculadora",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14238689"
	},
	"item": [
		{
			"name": "Verificar operação soma com a e b validos",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Resposta da requisição\r",
							"const json_response = pm.response.json();\r",
							"\r",
							"// Verificação do status code\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Verificação do Content-Type\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
							"});\r",
							"\r",
							"// Verificação da mensagem\r",
							"pm.test(\"Soma está correta\", function () {\r",
							"    pm.expect(json_response).to.eql({\"a\": 2, \"b\": 5, \"resultado\": 7});\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{endereco_servidor}}:{{porta}}/somar?a=2&b=5",
					"protocol": "http",
					"host": [
						"{{endereco_servidor}}"
					],
					"port": "{{porta}}",
					"path": [
						"somar"
					],
					"query": [
						{
							"key": "a",
							"value": "2"
						},
						{
							"key": "b",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verificar operação soma com a invalido e b valido",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Resposta da requisição\r",
							"const json_response = pm.response.json();\r",
							"\r",
							"// Verificação do status code\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"// Verificação do Content-Type\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
							"});\r",
							"\r",
							"// Verificação da mensagem\r",
							"pm.test(\"Soma está correta\", function () {\r",
							"    pm.expect(json_response).to.eql({\"error\": \"1 validation error for Request\\nquery -> a\\n  value is not a valid integer (type=type_error.integer)\"});\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{endereco_servidor}}:{{porta}}/somar?a=2.1&b=5",
					"protocol": "http",
					"host": [
						"{{endereco_servidor}}"
					],
					"port": "{{porta}}",
					"path": [
						"somar"
					],
					"query": [
						{
							"key": "a",
							"value": "2.1"
						},
						{
							"key": "b",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verificar operação soma com a valido e b invalido",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Resposta da requisição\r",
							"const json_response = pm.response.json();\r",
							"\r",
							"// Verificação do status code\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"// Verificação do Content-Type\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
							"});\r",
							"\r",
							"// Verificação da mensagem\r",
							"pm.test(\"Soma está correta\", function () {\r",
							"    pm.expect(json_response).to.eql({\"error\": \"1 validation error for Request\\nquery -> b\\n  value is not a valid integer (type=type_error.integer)\"});\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{endereco_servidor}}:{{porta}}/somar?a=2&b=5.4",
					"protocol": "http",
					"host": [
						"{{endereco_servidor}}"
					],
					"port": "{{porta}}",
					"path": [
						"somar"
					],
					"query": [
						{
							"key": "a",
							"value": "2"
						},
						{
							"key": "b",
							"value": "5.4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verificar operação soma com a e b invalidos",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Resposta da requisição\r",
							"const json_response = pm.response.json();\r",
							"\r",
							"// Verificação do status code\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"// Verificação do Content-Type\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
							"});\r",
							"\r",
							"// Verificação da mensagem\r",
							"pm.test(\"Soma está correta\", function () {\r",
							"    pm.expect(json_response).to.eql({    \"error\": \"2 validation errors for Request\\nquery -> a\\n  value is not a valid integer (type=type_error.integer)\\nquery -> b\\n  value is not a valid integer (type=type_error.integer)\"});\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{endereco_servidor}}:{{porta}}/somar?a=2.2&b=5.4",
					"protocol": "http",
					"host": [
						"{{endereco_servidor}}"
					],
					"port": "{{porta}}",
					"path": [
						"somar"
					],
					"query": [
						{
							"key": "a",
							"value": "2.2"
						},
						{
							"key": "b",
							"value": "5.4"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "endereco_servidor",
			"value": "172.31.122.120",
			"type": "string"
		},
		{
			"key": "porta",
			"value": "5000",
			"type": "string"
		}
	]
}